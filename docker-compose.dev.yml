version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: wishper_postgres_dev
    environment:
      POSTGRES_DB: ${DB_DATABASE:-wishper_dev}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-wishper_dev}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DB_HOST=postgres
        - DB_PORT=${DB_PORT:-5432}
        - DB_USERNAME=${DB_USERNAME:-postgres}
        - DB_DATABASE=${DB_DATABASE:-wishper_dev}
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3001
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_DATABASE=${DB_DATABASE:-wishper_dev}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
    command: ['pnpm', 'run', 'dev', '--filter=api']

volumes:
  postgres_dev_data:
