services:
  postgres:
    image: postgres:16-alpine
    container_name: wishper_postgres_dev
    environment:
      POSTGRES_DB: ${DB_DATABASE:-wishper_dev}
      POSTGRES_USER: ${DB_USERNAME:-wishper_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-wishper_user} -d ${DB_DATABASE:-wishper_dev}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - wishper_dev_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: wishper_api_dev
    ports:
      - '${API_PORT:-3001}:3001'
    environment:
      # Application
      NODE_ENV: development
      HOST: 0.0.0.0
      PORT: 3001

      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-wishper_user}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE:-wishper_dev}

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1d}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev-refresh-secret-key}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/api/node_modules
      - /app/packages/schemas/node_modules
    command: pnpm --filter=api dev
    restart: unless-stopped
    networks:
      - wishper_dev_network

volumes:
  postgres_dev_data:
    driver: local

networks:
  wishper_dev_network:
    driver: bridge
